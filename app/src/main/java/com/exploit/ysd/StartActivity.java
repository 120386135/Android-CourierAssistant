package com.exploit.ysd;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Color;
import android.graphics.drawable.AnimationDrawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;
import com.baidu.mapapi.SDKInitializer;
import com.baidu.mapapi.map.BaiduMap;
import com.baidu.mapapi.map.BitmapDescriptor;
import com.baidu.mapapi.map.BitmapDescriptorFactory;
import com.baidu.mapapi.map.MapStatus;
import com.baidu.mapapi.map.MapView;
import com.baidu.mapapi.map.MyLocationConfiguration;
import com.baidu.mapapi.map.MyLocationData;
import com.baidu.mapapi.model.LatLng;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Handler;
import java.util.logging.LogRecord;

/**
 * Created by zhongtai on 2016/7/6.
 */
public class StartActivity extends Activity {
    private static final String LTAG = MainActivity.class.getSimpleName();
    String strDes;
    TextView distanceTitle;
    ArrayList<Data> dataArrayListOrdered;
    ArrayList<Data> dataArrayListOrderedCopy;
    NewStartListAdapter startListAdapter;
    int numOfNextPlace = 1 ;
    ListView mListView;
    AnimationDrawable animationDrawable;
    View itemView;
    ImageView arrowView;



    // 定位相关
    LocationClient mLocClient;
    public MyLocationListenner myListener = new MyLocationListenner();
    boolean isFirstLoc = true; // 是否首次定位

    /**
     * 构造广播监听类，监听 SDK key 验证以及网络异常广播
     */
    public class SDKReceiver extends BroadcastReceiver {

        public void onReceive(Context context, Intent intent) {
            String s = intent.getAction();
            Log.d(LTAG, "action: " + s);
            TextView text = (TextView) findViewById(R.id.tv_title);
            text.setTextColor(Color.RED);
            if (s.equals(SDKInitializer.SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR)) {
                text.setText("key 验证出错! 错误码 :" + intent.getIntExtra
                        (SDKInitializer.SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE, 0)
                        + " ; 请在 AndroidManifest.xml 文件中检查 key 设置");
            } else if (s.equals(SDKInitializer.SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_OK)) {
                text.setText("key 验证成功! 功能可以正常使用");
                text.setTextColor(Color.YELLOW);
            } else if (s.equals(SDKInitializer.SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR)) {
                text.setText("网络出错");
            }
        }
    }

    private SDKReceiver mReceiver;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //在使用SDK各组件之前初始化context信息，传入ApplicationContext
        //注意该方法要再setContentView方法之前实现
        SDKInitializer.initialize(getApplicationContext());
        setContentView(R.layout.activity_start);

        mListView = (ListView) findViewById(R.id.listView);

        distanceTitle = (TextView) findViewById(R.id.tv_title);


        dataArrayListOrdered = (ArrayList<Data>) getIntent().getSerializableExtra("order");
        dataArrayListOrderedCopy = dataArrayListOrdered;
        for(int i = 0; i < 5; i++){
            Data data = new Data("", "", "");
            data.setType();
            dataArrayListOrdered.add(data);
        }
        strDes = (dataArrayListOrdered.get(numOfNextPlace)).getLatLng();

        ListView mListView = (ListView) findViewById(R.id.listView);
        startListAdapter = new NewStartListAdapter(this, dataArrayListOrdered);
        mListView.setAdapter(startListAdapter);

        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            public void onItemClick(AdapterView<?> arg0, View v, int index,
                                    long arg3) {
                onListItemClick(index);
            }
        });
        // 注册 SDK 广播监听者
        IntentFilter iFilter = new IntentFilter();
        iFilter.addAction(SDKInitializer.SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_OK);
        iFilter.addAction(SDKInitializer.SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR);
        iFilter.addAction(SDKInitializer.SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR);
        mReceiver = new SDKReceiver();
        registerReceiver(mReceiver, iFilter);


        // 定位初始化
        mLocClient = new LocationClient(getApplicationContext());
        mLocClient.registerLocationListener(myListener);
        LocationClientOption option = new LocationClientOption();
        option.setOpenGps(true); // 打开gps
        option.setCoorType("bd09ll"); // 设置坐标类型
        option.setScanSpan(10000);
        mLocClient.setLocOption(option);
        mLocClient.start();




        buttonInit();




    }

    void buttonInit(){


        Button finishStepBtn = (Button) findViewById(R.id.finishStepBtn);
        finishStepBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                numOfNextPlace++;
                mListView.setSelectionFromTop(numOfNextPlace - 1, -1);
                if (numOfNextPlace < dataArrayListOrdered.size() - 4)
                    strDes = (dataArrayListOrdered.get(numOfNextPlace)).getLatLng();
                else
                    Toast.makeText(StartActivity.this, "最后一步了", 0).show();


                //if (arrowView != null)
                    //arrowView.setImageResource(R.drawable.arrow_green);
                if (animationDrawable != null){
                    animationDrawable.stop();
                    animationDrawable.selectDrawable(8);
                }


                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Log.d("dfsffsdfsdfe", "5555555555555555555");
                        // TODO Auto-generated method stub
                        try {
                            Thread.sleep(600);
                        } catch (InterruptedException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                        itemView = mListView.getChildAt(0);
                        arrowView = (ImageView) itemView.findViewById(R.id.arrow);
                        animationDrawable = (AnimationDrawable) arrowView.getBackground();
                        arrowView.post(new Runnable() {
                            @Override
                            public void run() {
                                animationDrawable.start();
                            }
                        });
                        myHandler.sendEmptyMessage(0);
                    }
                }).start();


            }
        });

        Button navigationBtn = (Button) findViewById(R.id.navigationBtn);
        navigationBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

            }
        });
    }


    public  android.os.Handler myHandler = new android.os.Handler() {
        @Override
        public void handleMessage(Message msg) {
            Log.d("dfsffsdfsdfe", "444444444444444444444");
            mListView.getAdapter().getView(numOfNextPlace - 1, itemView, mListView);
        }

    };





    void onListItemClick(final int index) {
    }


    /**
     * 定位SDK监听函数
     */
    public class MyLocationListenner implements BDLocationListener {

        @Override
        public void onReceiveLocation(BDLocation location) {
            // map view 销毁后不在处理新接收的位置
            if (location == null) {
                return;
            }
            String url = "http://api.map.baidu.com/routematrix/v2/walking?output=json&mcode=C4:BD:99:8D:14:55:B2:25:20:63:1E:2A:06:7F:4C:E1:71:6B:04:C6;com.exploit.ysd&ak=B5ArGW18KWx45YKqEe53sD29sGqcDpdB&origins="
                    + String.valueOf(location.getLatitude()) + "," + String.valueOf(location.getLongitude()) + "&destinations=" + strDes;
            new RequestTask(url).execute();
            Log.d("startAccccc", String.valueOf(location.getLatitude()) + "///" + String.valueOf(location.getLongitude()));
        }

    }

    @Override
    protected void onPause() {
        super.onPause();
    }

    @Override
    protected void onResume() {
        super.onResume();
    }

    @Override
    protected void onDestroy() {
        // 退出时销毁定位
        mLocClient.stop();
        super.onDestroy();
        unregisterReceiver(mReceiver);
    }


    private class RequestTask extends AsyncTask<Void, Void, String> {
        private String url;


        public RequestTask(String stUrl) {
            url = stUrl;
        }

        @Override
        protected String doInBackground(Void... params) {

            return RequestData(url);
        }

        @Override
        protected void onPostExecute(String result) {


            super.onPostExecute(result);
            if (result != null) {

                JSONObject object = null;
                try {
                    object = new JSONObject(result);
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                int status = object.optInt("status");
                if (status == 0) {
                    JSONArray resultArray = object.optJSONArray("result");
                    JSONObject resultObj = (JSONObject) resultArray.opt(0);
                    JSONObject disObj = resultObj.optJSONObject("distance");
                    int dis = disObj.optInt("value");
                    distanceTitle.setText("距离下一地点：" + String.valueOf(dis) + "m");
                    Log.d("resultJson2222", result);
                } else if (result == null) {

                }
            }
        }

        public String RequestData(String url) {
            HttpGet get = new HttpGet(url);
            HttpClient client = new DefaultHttpClient();
            StringBuilder builder = null;
            try {
                HttpResponse response = client.execute(get);
                if (response.getStatusLine().getStatusCode() == 200) {
                    InputStream inputStream = response.getEntity().getContent();
                    BufferedReader reader = new BufferedReader(
                            new InputStreamReader(inputStream));
                    builder = new StringBuilder();
                    String s = null;
                    for (s = reader.readLine(); s != null; s = reader.readLine()) {
                        builder.append(s);
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return builder.toString();
        }

    }
}
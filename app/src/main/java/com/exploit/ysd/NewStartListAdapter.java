package com.exploit.ysd;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.drawable.AnimationDrawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.logging.Handler;

/**
 * Created by zhongtai on 2016/7/9.
 */
public class NewStartListAdapter extends BaseAdapter {
    public static final int NORMAL_LAYOUT = 0;
    public static final int BLANK_LAYOUT = 1;
    private LayoutInflater mInflater;
    private ArrayList<Data> myList;

    public NewStartListAdapter(Context context, ArrayList<Data> myList){
        this.myList = myList;
        mInflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    }

    @Override
    public int getCount() {
        return myList.size();
    }

    @Override
    public Object getItem(int arg0) {
        return myList.get(arg0);
    }

    @Override
    public long getItemId(int arg0) {
        return arg0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup arg2) {
        ViewHolder holder = null;
        Data data = myList.get(position);
        int type = getItemViewType(position);
        if (convertView == null) {
            switch (type) {
                case NORMAL_LAYOUT:
                    //创建新的view视图.
                    convertView = mInflater.inflate(R.layout.start_list_item, null); //see above, you can use the passed resource id.
                    holder = new ViewHolder();
                    //查找每个ViewItem中,各个子View,放进holder中
                    //ImageView imageView = (ImageView) convertView.findViewById(R.id.arrow);
                    //imageView.setImageResource(R.drawable.arrow_white);

                    holder.address = (TextView) convertView.findViewById(R.id.address);
                    holder.sequence = (TextView) convertView.findViewById(R.id.sequence);
                    holder.address.setText(data.getAddress());
                    holder.sequence.setText(String.valueOf(position + 1));
                    //保存对每个显示的ViewItem中, 各个子View的引用对象
                    convertView.setTag(holder);

                    break;
                case BLANK_LAYOUT:
                    convertView = mInflater.inflate(R.layout.blank_layout, null); //see above, you can use the passed resource id.
                    //holder = new ViewHolder();
                    //convertView.setTag(holder);
                    break;
                default:
                    break;
            }
        }else {
            switch (type) {
                case NORMAL_LAYOUT:
                    holder = (ViewHolder) convertView.getTag();
                    holder.address.setText(data.getAddress());
                    holder.sequence.setText(String.valueOf(position + 1));
                    break;
                case BLANK_LAYOUT:
                    break;
                default:
                    break;
            }
        }
        return convertView;
    }

    /**
     * 根据数据源的position返回需要显示的的layout的type
     *
     * type的值必须从0开始
     *
     * */
    @Override
    public int getItemViewType(int position) {

        Data msg = myList.get(position);
        int type = msg.getType();
        return type;
    }

    /**
     * 返回所有的layout的数量
     *
     * */
    @Override
    public int getViewTypeCount() {
        return 2;
    }


    private static class ViewHolder
    {
        TextView address;
        TextView sequence;
    }
}
